name: Release Distributions
on:
  push:
    branches:
      - main

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Create local properties
        run: |
          echo "app.release.apiBaseUrl=${{ secrets.CONFIG_API_BASE_URL }}" > local.properties
          echo "app.dev.apiBaseUrl=${{ secrets.CONFIG_API_BASE_URL }}" >> local.properties
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew composeApp:packageDistributionForCurrentOS -P buildkonfig.flavor=release
      - name: Upload failure logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: jpackage-logs
          path: composeApp/build/compose/logs/
      - name: Rename output
        working-directory: composeApp/build/compose/binaries/main/dmg/
        run: mv *.dmg hachimi-world-latest.dmg
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos
          path: composeApp/build/compose/binaries/main/dmg/*.dmg
          compression-level: 0
      - name: Upload to S3
        uses: shallwefootball/s3-upload-action@master
        with:
          endpoint: ${{ secrets.S3_ENDPOINT }}
          aws_key_id: ${{ secrets.S3_KEY_ID }}
          aws_secret_access_key: ${{ secrets.S3_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.S3_BUCKET }}
          source_dir: composeApp/build/compose/binaries/main/dmg/
          destination_dir: distribution/macos/
  build-windows:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Create local properties
        run: |
          echo "app.release.apiBaseUrl=${{ secrets.CONFIG_API_BASE_URL }}" > local.properties
          echo "app.dev.apiBaseUrl=${{ secrets.CONFIG_API_BASE_URL }}" >> local.properties
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew composeApp:packageDistributionForCurrentOS -P buildkonfig.flavor=release
      - name: Upload failure logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: jpackage-logs
          path: composeApp/build/compose/logs/
      - name: Rename output
        working-directory: composeApp/build/compose/binaries/main/msi/
        run: mv *.msi hachimi-world-latest.msi
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: composeApp/build/compose/binaries/main/msi/*.msi
          compression-level: 0
      - name: Upload to S3
        uses: shallwefootball/s3-upload-action@master
        with:
          endpoint: ${{ secrets.S3_ENDPOINT }}
          aws_key_id: ${{ secrets.S3_KEY_ID }}
          aws_secret_access_key: ${{ secrets.S3_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.S3_BUCKET }}
          source_dir: composeApp/build/compose/binaries/main/msi/
          destination_dir: distribution/windows/
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Create local properties
        run: |
          echo "app.release.apiBaseUrl=${{ secrets.CONFIG_API_BASE_URL }}" > local.properties
          echo "app.dev.apiBaseUrl=${{ secrets.CONFIG_API_BASE_URL }}" >> local.properties
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew composeApp:packageDistributionForCurrentOS -P buildkonfig.flavor=release
      - name: Upload failure logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: jpackage-logs
          path: composeApp/build/compose/logs/
      - name: Rename output
        working-directory: composeApp/build/compose/binaries/main/deb/
        run: mv *.deb hachimi-world-latest.deb
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: composeApp/build/compose/binaries/main/deb/*.deb
          compression-level: 0
      - name: Upload to S3
        uses: shallwefootball/s3-upload-action@master
        with:
          endpoint: ${{ secrets.S3_ENDPOINT }}
          aws_key_id: ${{ secrets.S3_KEY_ID }}
          aws_secret_access_key: ${{ secrets.S3_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.S3_BUCKET }}
          source_dir: composeApp/build/compose/binaries/main/deb/
          destination_dir: distribution/linux/
  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Create local properties
        run: |
          echo "app.release.apiBaseUrl=${{ secrets.CONFIG_API_BASE_URL }}" > local.properties
          echo "app.dev.apiBaseUrl=${{ secrets.CONFIG_API_BASE_URL }}" >> local.properties
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Decode Keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > composeApp/android.jks
      - name: Build Release APK
        run: ./gradlew assembleRelease -P buildkonfig.flavor=release
        env:
          IS_CI: true
          ANDROID_KEYSTORE_FILE: android.jks
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      - name: Upload failure logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: jpackage-logs
          path: build/reports/problems
      - name: Rename output
        working-directory: composeApp/build/outputs/apk/release/
        run: mv *.apk hachimi-world-latest.apk
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android
          path: composeApp/build/outputs/apk/release/
          compression-level: 0
      - name: Upload to S3
        uses: shallwefootball/s3-upload-action@master
        with:
          endpoint: ${{ secrets.S3_ENDPOINT }}
          aws_key_id: ${{ secrets.S3_KEY_ID }}
          aws_secret_access_key: ${{ secrets.S3_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.S3_BUCKET }}
          source_dir: composeApp/build/outputs/apk/release/
          destination_dir: distribution/android/